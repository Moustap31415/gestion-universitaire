package sn.edu.ugb.grade.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class NoteAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertNoteAllPropertiesEquals(Note expected, Note actual) {
        assertNoteAutoGeneratedPropertiesEquals(expected, actual);
        assertNoteAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertNoteAllUpdatablePropertiesEquals(Note expected, Note actual) {
        assertNoteUpdatableFieldsEquals(expected, actual);
        assertNoteUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertNoteAutoGeneratedPropertiesEquals(Note expected, Note actual) {
        assertThat(actual)
            .as("Verify Note auto generated properties")
            .satisfies(a -> assertThat(a.getId()).as("check id").isEqualTo(expected.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertNoteUpdatableFieldsEquals(Note expected, Note actual) {
        assertThat(actual)
            .as("Verify Note relevant properties")
            .satisfies(a -> assertThat(a.getValeur()).as("check valeur").isEqualTo(expected.getValeur()))
            .satisfies(a -> assertThat(a.getCommentaires()).as("check commentaires").isEqualTo(expected.getCommentaires()))
            .satisfies(a -> assertThat(a.getEtudiantId()).as("check etudiantId").isEqualTo(expected.getEtudiantId()))
            .satisfies(a -> assertThat(a.getEvaluationId()).as("check evaluationId").isEqualTo(expected.getEvaluationId()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertNoteUpdatableRelationshipsEquals(Note expected, Note actual) {
        // empty method
    }
}
