package sn.edu.ugb.grade.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class SessionExamenAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertSessionExamenAllPropertiesEquals(SessionExamen expected, SessionExamen actual) {
        assertSessionExamenAutoGeneratedPropertiesEquals(expected, actual);
        assertSessionExamenAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertSessionExamenAllUpdatablePropertiesEquals(SessionExamen expected, SessionExamen actual) {
        assertSessionExamenUpdatableFieldsEquals(expected, actual);
        assertSessionExamenUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertSessionExamenAutoGeneratedPropertiesEquals(SessionExamen expected, SessionExamen actual) {
        assertThat(actual)
            .as("Verify SessionExamen auto generated properties")
            .satisfies(a -> assertThat(a.getId()).as("check id").isEqualTo(expected.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertSessionExamenUpdatableFieldsEquals(SessionExamen expected, SessionExamen actual) {
        assertThat(actual)
            .as("Verify SessionExamen relevant properties")
            .satisfies(a -> assertThat(a.getNom()).as("check nom").isEqualTo(expected.getNom()))
            .satisfies(a -> assertThat(a.getDateDebut()).as("check dateDebut").isEqualTo(expected.getDateDebut()))
            .satisfies(a -> assertThat(a.getDateFin()).as("check dateFin").isEqualTo(expected.getDateFin()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertSessionExamenUpdatableRelationshipsEquals(SessionExamen expected, SessionExamen actual) {
        // empty method
    }
}
