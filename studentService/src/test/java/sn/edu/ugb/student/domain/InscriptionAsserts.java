package sn.edu.ugb.student.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class InscriptionAsserts {

    public static void assertInscriptionAllPropertiesEquals(Inscription expected, Inscription actual) {
        assertInscriptionAutoGeneratedPropertiesEquals(expected, actual);
        assertInscriptionAllUpdatablePropertiesEquals(expected, actual);
    }

    public static void assertInscriptionAllUpdatablePropertiesEquals(Inscription expected, Inscription actual) {
        assertInscriptionUpdatableFieldsEquals(expected, actual);
        assertInscriptionUpdatableRelationshipsEquals(expected, actual);
    }

    public static void assertInscriptionAutoGeneratedPropertiesEquals(Inscription expected, Inscription actual) {
        assertThat(actual)
            .as("Verify Inscription auto generated properties")
            .satisfies(a -> assertThat(a.getId()).as("check id").isEqualTo(expected.getId()));
    }

    public static void assertInscriptionUpdatableFieldsEquals(Inscription expected, Inscription actual) {
        assertThat(actual)
            .as("Verify Inscription relevant properties")
            .satisfies(a -> assertThat(a.getEnCours()).as("check enCours").isEqualTo(expected.getEnCours()))
            .satisfies(a -> assertThat(a.getFiliereId()).as("check filiereId").isEqualTo(expected.getFiliereId()))
            .satisfies(a -> assertThat(a.getSemestreId()).as("check semestreId").isEqualTo(expected.getSemestreId()));
    }

    public static void assertInscriptionUpdatableRelationshipsEquals(Inscription expected, Inscription actual) {
        assertThat(actual)
            .as("Verify Inscription relationships")
            .satisfies(a -> assertThat(a.getEtudiant()).as("check etudiant").isEqualTo(expected.getEtudiant()));
    }
}
