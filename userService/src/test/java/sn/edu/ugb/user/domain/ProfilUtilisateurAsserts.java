package sn.edu.ugb.user.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class ProfilUtilisateurAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertProfilUtilisateurAllPropertiesEquals(ProfilUtilisateur expected, ProfilUtilisateur actual) {
        assertProfilUtilisateurAutoGeneratedPropertiesEquals(expected, actual);
        assertProfilUtilisateurAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertProfilUtilisateurAllUpdatablePropertiesEquals(ProfilUtilisateur expected, ProfilUtilisateur actual) {
        assertProfilUtilisateurUpdatableFieldsEquals(expected, actual);
        assertProfilUtilisateurUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertProfilUtilisateurAutoGeneratedPropertiesEquals(ProfilUtilisateur expected, ProfilUtilisateur actual) {
        assertThat(actual)
            .as("Verify ProfilUtilisateur auto generated properties")
            .satisfies(a -> assertThat(a.getId()).as("check id").isEqualTo(expected.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertProfilUtilisateurUpdatableFieldsEquals(ProfilUtilisateur expected, ProfilUtilisateur actual) {
        assertThat(actual)
            .as("Verify ProfilUtilisateur relevant properties")
            .satisfies(a -> assertThat(a.getNom()).as("check nom").isEqualTo(expected.getNom()))
            .satisfies(a -> assertThat(a.getPrenom()).as("check prenom").isEqualTo(expected.getPrenom()))
            .satisfies(a -> assertThat(a.getEmail()).as("check email").isEqualTo(expected.getEmail()))
            .satisfies(a -> assertThat(a.getTelephone()).as("check telephone").isEqualTo(expected.getTelephone()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertProfilUtilisateurUpdatableRelationshipsEquals(ProfilUtilisateur expected, ProfilUtilisateur actual) {
        assertThat(actual)
            .as("Verify ProfilUtilisateur relationships")
            .satisfies(a -> assertThat(a.getRole()).as("check role").isEqualTo(expected.getRole()));
    }
}
