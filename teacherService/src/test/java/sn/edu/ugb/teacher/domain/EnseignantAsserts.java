package sn.edu.ugb.teacher.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class EnseignantAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertEnseignantAllPropertiesEquals(Enseignant expected, Enseignant actual) {
        assertEnseignantAutoGeneratedPropertiesEquals(expected, actual);
        assertEnseignantAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertEnseignantAllUpdatablePropertiesEquals(Enseignant expected, Enseignant actual) {
        assertEnseignantUpdatableFieldsEquals(expected, actual);
        assertEnseignantUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertEnseignantAutoGeneratedPropertiesEquals(Enseignant expected, Enseignant actual) {
        assertThat(actual)
            .as("Verify Enseignant auto generated properties")
            .satisfies(a -> assertThat(a.getId()).as("check id").isEqualTo(expected.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertEnseignantUpdatableFieldsEquals(Enseignant expected, Enseignant actual) {
        assertThat(actual)
            .as("Verify Enseignant relevant properties")
            .satisfies(a -> assertThat(a.getNumeroEnseignant()).as("check numeroEnseignant").isEqualTo(expected.getNumeroEnseignant()))
            .satisfies(a -> assertThat(a.getSpecialisation()).as("check specialisation").isEqualTo(expected.getSpecialisation()))
            .satisfies(a -> assertThat(a.getDateEmbauche()).as("check dateEmbauche").isEqualTo(expected.getDateEmbauche()))
            .satisfies(a -> assertThat(a.getUtilisateurId()).as("check utilisateurId").isEqualTo(expected.getUtilisateurId()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertEnseignantUpdatableRelationshipsEquals(Enseignant expected, Enseignant actual) {
        // empty method
    }
}
